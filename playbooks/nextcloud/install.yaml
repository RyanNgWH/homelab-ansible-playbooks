# @format

# Nextcloud
# Install and configure the Nextcloud cloud storage server.
---
- name: Setup nextcloud application files
  become: true
  block:
    - name: Ensure nextcloud directory is present
      ansible.builtin.file:
        path: "{{ docker_project_src }}"
        owner: "{{ nfs_user_name }}"
        group: "{{ nfs_user_name }}"
        mode: "0750"
        state: directory

    - name: Setup docker-compose file
      ansible.builtin.template:
        src: templates/app.docker-compose.yaml
        dest: "{{ docker_project_src }}/docker-compose.yaml"
        owner: "{{ nfs_user_name }}"
        group: "{{ nfs_user_name }}"
        mode: "0640"

    - name: Create php-session.ini file (workaround nextcloud docker permissions issue)
      ansible.builtin.file:
        path: "{{ docker_project_src }}/redis-session.ini"
        owner: "{{ nfs_user_name }}"
        group: "{{ nfs_user_name }}"
        mode: "0750"
        modification_time: preserve
        access_time: preserve
        state: touch

    - name: Setup nextcloud systemd background jobs service
      ansible.builtin.template:
        src: templates/app.nextcloud-cron.service
        dest: /etc/systemd/system/nextcloud-cron.service
        owner: root
        group: root
        mode: "0644"

    - name: Create systemd timer for nextcloud systemd background jobs
      ansible.builtin.copy:
        src: files/app.nextcloud-cron.timer
        dest: /etc/systemd/system/nextcloud-cron.timer
        owner: root
        group: root
        mode: "0644"

    - name: Enable and start nextcloud-cron.service
      ansible.builtin.systemd_service:
        name: nextcloud-cron.service
        daemon_reload: true
        enabled: true
        state: started

    - name: Enable and start nextcloud-cron.timer
      ansible.builtin.systemd_service:
        name: nextcloud-cron.timer
        daemon_reload: true
        enabled: true
        state: started

- name: Sync backup of nextcloud config & clamav directory
  become: true
  block:
    - name: Ensure rsync is installed
      ansible.builtin.apt:
        name: rsync
        update_cache: true
        state: present

    - name: Ensure nextcloud docker containers are stopped
      community.docker.docker_compose_v2:
        project_name: "{{ docker_project_name }}"
        project_src: "{{ docker_project_src }}"
        state: absent

    - name: Sync directories from NFS server to local application directory
      ansible.posix.synchronize:
        src: "{{ nfs_mounts.wendy.mount_point }}/{{ item }}"
        dest: "{{ docker_project_src }}/"
      delegate_to: "{{ inventory_hostname }}"
      loop:
        - nextcloud/config
        - clamav

    - name: Ensure directories permissions is set
      ansible.builtin.file:
        path: "{{ docker_project_src }}/{{ item }}"
        owner: "{{ nfs_user_name }}"
        group: "{{ nfs_user_name }}"
        mode: "0770"
        recurse: true
        follow: false
        state: directory
      loop:
        - config
        - clamav

- name: Setup Fail2Ban
  become: true
  block:
    - name: Install Fail2Ban
      ansible.builtin.apt:
        name: fail2ban
        update_cache: true
        state: present

    - name: Add nextcloud fail2ban filter
      ansible.builtin.copy:
        src: files/fail2ban.filter.nextcloud.conf
        dest: /etc/fail2ban/filter.d/nextcloud.conf
        owner: root
        group: root
        mode: "0644"

    - name: Add nextcloud fail2ban jail
      ansible.builtin.template:
        src: templates/fail2ban.jail.nextcloud.conf
        dest: /etc/fail2ban/jail.d/nextcloud.conf
        owner: root
        group: root
        mode: "0644"

    - name: Configure sshd jail (addresses upstream bug)
      ansible.builtin.lineinfile:
        path: /etc/fail2ban/jail.conf
        line: "backend = systemd"
        regexp: "^backend = .*sshd.*"
        state: present

    - name: Restart fail2ban
      ansible.builtin.systemd_service:
        name: fail2ban.service
        state: restarted

- name: Install and configure nginx
  vars:
    debian_common_task_list:
      - nginx
    nginx_tls_domains:
      - "{{ ansible_host }}"
      - "{{ nextcloud_collabora_hostname }}"
  ansible.builtin.include_role:
    name: debian-common

- name: Start nextcloud docker containers
  become: true
  community.docker.docker_compose_v2:
    project_name: "{{ docker_project_name }}"
    project_src: "{{ docker_project_src }}"
    state: present
