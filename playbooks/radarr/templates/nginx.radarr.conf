# Rate limiting
limit_req_zone $binary_remote_addr zone=per_ip_5r_s:5m rate=5r/s;

# Default main log format from nginx repository:
log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                                '$status $body_bytes_sent "$http_referer" '
                                '"$http_user_agent" "$http_x_forwarded_for"';

# Sets a $real_scheme variable whose value is the scheme passed by the load
# balancer in X-Forwarded-Proto (if any), defaulting to $scheme.
# Similar to how the HttpRealIp module treats X-Forwarded-For.
map $http_x_forwarded_proto $real_scheme {
  default $http_x_forwarded_proto;
  ''      $scheme;
}

# Upstream context:
upstream radarr {
  server {{ ansible_default_ipv4.address }}:7878;

  # Sets the maximum number of idle keepalive connections to upstream servers
  # that are preserved in the cache of each worker process.
  keepalive 16;
}

# Place it at the beginning of the configuration file to prevent mistakes:
server {
  # For ssl option remember about SSL parameters (private key, certs, cipher suites, etc.);
  # add default_server to your listen directive in the server that you want to act as the default:
  listen {{ ansible_default_ipv4.address }}:443 default_server ssl http2;

  # Use Mozilla's guidelines for SSL/TLS settings
  # https://mozilla.github.io/server-side-tls/ssl-config-generator/
  ssl_certificate     /etc/letsencrypt/live/{{ ansible_host }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ ansible_host }}/privkey.pem;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  # SSL Security
  include /etc/nginx/https.conf;

  # HSTS settings
  # WARNING: Only add the preload option once you read about
  # the consequences in https://hstspreload.org/. This option
  # will add the domain to a hardcoded list that is shipped
  # in all major browsers and getting removed from this list
  # could take several months.
  add_header Strict-Transport-Security "max-age=63072000; includeSubDomains;" always;

  # We catch:
  #   - invalid domain names
  #   - requests without the "Host" header
  #   - and all others (also due to the above setting; like "--" or "!@#")
  #   - default_server in server_name directive is not required
  #     I add this for a better understanding and I think it's an unwritten standard
  # ...but you should know that it's irrelevant, really, you can put in everything there.
  server_name _ "" default_server;

  limit_req zone=per_ip_5r_s;

  # Close (hang up) connection without response:
  return 444;

  # We can also serve:
  # location / {
  #       static file (error page):
  #               root /etc/nginx/error-pages/404;
  #       or redirect:
  #               return 301 https://badssl.com;
  #
  # }

  # Remember to log all actions (set up access and error log):
  access_log /var/log/nginx/access.log main;
  error_log /var/log/nginx/error.log warn;
}

server {
  listen {{ ansible_default_ipv4.address }}:80;
  server_name {{ ansible_host }};

  # Enforce HTTPS
  return 301 https://$server_name$request_uri;
}

server {
  listen {{ ansible_default_ipv4.address }}:443      ssl http2;
  server_name {{ ansible_host }};

  # Use Mozilla's guidelines for SSL/TLS settings
  # https://mozilla.github.io/server-side-tls/ssl-config-generator/
  ssl_certificate     /etc/letsencrypt/live/{{ ansible_host }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ ansible_host }}/privkey.pem;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  # SSL Security
  include /etc/nginx/https.conf;

  # HSTS settings
  # WARNING: Only add the preload option once you read about
  # the consequences in https://hstspreload.org/. This option
  # will add the domain to a hardcoded list that is shipped
  # in all major browsers and getting removed from this list
  # could take several months.
  add_header Strict-Transport-Security "max-age=63072000; includeSubDomains;" always;

  # Control Buffer Overflow attacks
  client_body_buffer_size 16k;      # default: 8k (32-bit) | 16k (64-bit)
  client_header_buffer_size 1k;     # default: 1k
  client_max_body_size 1M;        # default: 1m
  large_client_header_buffers 2 1k; # default: 4 8k

  # HTTP response headers borrowed from Nextcloud `.htaccess`
  add_header Referrer-Policy                      "no-referrer"   always;
  add_header X-Content-Type-Options               "nosniff"       always;
  add_header X-Download-Options                   "noopen"        always;
  add_header X-Frame-Options                      "SAMEORIGIN"    always;
  add_header X-Permitted-Cross-Domain-Policies    "none"          always;
  add_header X-Robots-Tag                         "none"          always;

  # Content Security Policy
  # See: https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP
  # Enforces https content and restricts JS/CSS to origin
  # External Javascript (such as cast_sender.js for Chromecast) must be whitelisted.
  add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' data:; script-src 'self' 'unsafe-inline'; worker-src 'self' blob:; connect-src 'self'; object-src 'none'; frame-ancestors 'self'";

  location / {
    # Proxy radarr traffic
    proxy_pass http://radarr;
    # By default only talks HTTP/1 to the upstream,
    # keepalive is only enabled in HTTP/1.1:
    proxy_http_version 1.1;
    # Remove the Connection header if the client sends it,
    # it could be "close" to close a keepalive connection:
    proxy_set_header Connection "Upgrade";

    #   - Host - host name from the request line, or host name from the Host request header fiel$
    proxy_set_header Host $host;
    #   - X-Real-IP - forwards the real visitor remote IP address to the proxied server
    proxy_set_header X-Real-IP $remote_addr;

    # X-Forwarded headers stack:
    #   - X-Forwarded-For - mark origin IP of client connecting to server through proxy
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #   - X-Forwarded-Proto - mark protocol of client connecting to server through proxy
    proxy_set_header X-Forwarded-Proto $real_scheme;
    #   - X-Forwarded-Host - mark origin host of client connecting to server through proxy
    proxy_set_header X-Forwarded-Host $http_host;
    #   - X-Forwarded-Port - defines the original port requested by the client
    proxy_set_header X-Forwarded-Port $server_port;
    #   - X-Forwarded-Server - the hostname of the proxy server
    proxy_set_header X-Forwarded-Server $host;

    proxy_redirect off;
    proxy_set_header Upgrade $http_upgrade;
  }

  location = /robots.txt {
    allow all;
    log_not_found off;
    access_log off;
  }

  # Rules borrowed from `.htaccess` to hide certain paths from clients
  location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)(?:$|/)  { return 404; }
  location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console)                { return 404; }

  # Hardening
  # Hide Nginx version number
  server_tokens off;

  # Hide Nginx server signature
  more_clear_headers 'Server';

  # Hide some standard response headers:
  proxy_hide_header X-Powered-By;
  proxy_hide_header X-AspNetMvc-Version;
  proxy_hide_header X-AspNet-Version;
  proxy_hide_header X-Drupal-Cache;

  # Hide some Amazon S3 specific response headers:
  proxy_hide_header X-Amz-Id-2;
  proxy_hide_header X-Amz-Request-Id;

  # Hide other risky response headers:
  proxy_hide_header X-Runtime;

  # Remove risky request headers (the safest method):
  proxy_set_header X-Original-URL "";
  proxy_set_header X-Rewrite-URL "";
  proxy_set_header X-Forwarded-Server "";
  proxy_set_header X-Forwarded-Host "";
  proxy_set_header X-Host "";
}
