# @format

# Jellyfin
# Upgrade Jellyfin media streaming server
---
- name: Get application current and latest versions
  ansible.builtin.include_tasks: get-versions.yaml
  loop:
    - name: jellyfin
      docker_name: "{{ jellyfin_docker_name }}"
      docker_user: jellyfin
      docker_repo: jellyfin

- name: Fix application docker image versionings in fact
  ansible.builtin.set_fact:
    jellyfin_image_version: "v{{ jellyfin_image_version }}"

- name: Check if applications have updates
  block:
    - name: Check if applications have updates
      ansible.builtin.set_fact:
        jellyfin_has_updates: "{{ jellyfin_image_version != jellyfin_latest_version }}"

    - name: Stop play if applications have no updates
      ansible.builtin.meta: end_play
      when: "not jellyfin_has_updates"

- name: Take snapshot of Proxmox instance
  ansible.builtin.import_role:
    name: proxmox
    public: false
  vars:
    proxmox_task_list: snapshot
    proxmox_snapshot_name: "{{ 'pre_upgrade_' + (jellyfin_image_version | regex_replace('[.]', '-')) }}"
    proxmox_snapshot_description: "[Ansible] Working snapshot of jellyfin {{ jellyfin_image_version }} - upgrading to jellyfin {{ jellyfin_latest_version }}"
  delegate_to: localhost

- name: Backup Jellyfin data directory
  ansible.builtin.import_tasks: backup.yaml

- name: Upgrade Jellyfin media streaming server
  become: true
  block:
    - name: Update apt cache, upgrade packages and remove unused dependencies
      ansible.builtin.apt:
        update_cache: true
        upgrade: dist
        autoremove: true
        purge: true

    - name: Update & start Jellyfin docker containers
      become: true
      community.docker.docker_compose_v2:
        project_name: "{{ docker_project_name }}"
        project_src: "{{ docker_project_src }}"
        remove_orphans: true
        pull: always
        state: present

    - name: Prune unused docker objects
      community.docker.docker_prune:
        builder_cache_all: true
        containers: true
        images: true
        networks: true
        volumes: true
