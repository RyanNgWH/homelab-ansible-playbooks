# @format

# Drop
# Upgrade Drop games management server
---
- name: Check if drop requires update
  become: true
  block:
    - name: Get latest drop server release from github
      become: false
      community.general.github_release:
        user: Drop-OSS
        repo: drop
        action: latest_release
      delegate_to: localhost
      register: drop_github_release

    - name: Extract latest drop server version
      ansible.builtin.set_fact:
        drop_latest_version: "{{ drop_github_release.tag }}"

    - name: Stop play if drop has no updates
      ansible.builtin.meta: end_play
      when: drop_image_version == drop_latest_version

- name: Take snapshot of Proxmox instance
  ansible.builtin.import_role:
    name: proxmox
    public: false
  vars:
    proxmox_task_list: snapshot
    proxmox_snapshot_name: "{{ 'pre_upgrade_' + (drop_image_version | replace('.', '-')) }}"
    proxmox_snapshot_description: "[Ansible] Working snapshot of drop {{ drop_image_version }} before upgrading to {{ drop_latest_version }}"
  delegate_to: localhost

- name: Upgrade Drop games management server
  become: true
  block:
    - name: Update apt cache, upgrade packages and remove unused dependencies
      ansible.builtin.apt:
        update_cache: true
        upgrade: dist
        autoremove: true
        purge: true

    - name: Ensure docker compose file is updated
      ansible.builtin.template:
        src: templates/app.docker-compose.yaml
        dest: "{{ docker_project_src }}/docker-compose.yaml"
        owner: "{{ nfs_user_name }}"
        group: "{{ nfs_user_name }}"
        mode: "0640"

    - name: Update & start Drop docker containers
      become: true
      community.docker.docker_compose_v2:
        project_name: "{{ docker_project_name }}"
        project_src: "{{ docker_project_src }}"
        remove_orphans: true
        pull: always
        state: present

    - name: Prune unused docker objects
      community.docker.docker_prune:
        builder_cache_all: true
        containers: true
        images: true
        networks: true
        volumes: true
