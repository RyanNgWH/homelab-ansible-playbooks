# @format

# Ntfy
# Install and configure the Ntfy notifications service.
---
- name: Setup Ntfy application files
  become: true
  block:
    - name: Ensure Ntfy directory is present
      ansible.builtin.file:
        path: "{{ docker_project_src }}"
        owner: "{{ nfs_user_name }}"
        group: "{{ nfs_user_name }}"
        mode: "0750"
        state: directory

    - name: Setup docker-compose file
      ansible.builtin.template:
        src: templates/app.docker-compose.yaml
        dest: "{{ docker_project_src }}/docker-compose.yaml"
        owner: "{{ nfs_user_name }}"
        group: "{{ nfs_user_name }}"
        mode: "0640"

    - name: Setup ntfy directories
      ansible.builtin.file:
        path: "{{ docker_project_src }}/{{ item }}"
        owner: "{{ nfs_user_name }}"
        group: "{{ nfs_user_name }}"
        mode: "0750"
        state: directory
      loop:
        - cache
        - data
        - config

    - name: Setup ntfy configuration file
      ansible.builtin.template:
        src: templates/app.configuration.yml
        dest: "{{ docker_project_src }}/config/server.yml"
        owner: "{{ nfs_user_name }}"
        group: "{{ nfs_user_name }}"
        mode: "0640"

- name: Sync backup of ntfy cache & data directories
  become: true
  block:
    - name: Ensure rsync is installed
      ansible.builtin.apt:
        name: rsync
        update_cache: true
        state: present

    - name: Ensure ntfy docker containers are stopped
      community.docker.docker_compose_v2:
        project_name: "{{ docker_project_name }}"
        project_src: "{{ docker_project_src }}"
        state: absent

    - name: Sync cache & data directories from NFS server to local application directory
      ansible.posix.synchronize:
        src: "{{ nfs_mounts.karina.mount_point }}/{{ item }}"
        dest: "{{ docker_project_src }}/"
      delegate_to: "{{ inventory_hostname }}"
      loop:
        - cache
        - data

    - name: Ensure cache & data directories permissions is set
      ansible.builtin.file:
        path: "{{ docker_project_src }}/{{ item }}"
        owner: "{{ nfs_user_name }}"
        group: "{{ nfs_user_name }}"
        mode: "0750"
        recurse: true
        follow: false
        state: directory
      loop:
        - cache
        - data

- name: Setup Fail2Ban
  become: true
  block:
    - name: Install Fail2Ban
      ansible.builtin.apt:
        name: fail2ban
        update_cache: true
        state: present

    - name: Add nginx fail2ban filter
      ansible.builtin.copy:
        src: files/fail2ban.filter.nginx.conf
        dest: /etc/fail2ban/filter.d/nginx-req-limit.conf
        owner: root
        group: root
        mode: "0644"

    - name: Add nginx fail2ban jail
      ansible.builtin.copy:
        src: files/fail2ban.jail.nginx.conf
        dest: /etc/fail2ban/jail.d/nginx-req-limit.conf
        owner: root
        group: root
        mode: "0644"

    - name: Configure sshd jail (addresses upstream bug)
      ansible.builtin.lineinfile:
        path: /etc/fail2ban/jail.conf
        line: "backend = systemd"
        regexp: "^backend = .*sshd.*"
        state: present

    - name: Restart fail2ban
      ansible.builtin.systemd_service:
        name: fail2ban.service
        state: restarted

- name: Install and configure nginx
  vars:
    debian_common_task_list:
      - nginx
    nginx_tls_domains:
      - "{{ ansible_host }}"
  ansible.builtin.include_role:
    name: debian-common

- name: Start ntfy docker containers
  become: true
  community.docker.docker_compose_v2:
    project_name: "{{ docker_project_name }}"
    project_src: "{{ docker_project_src }}"
    state: present
