# SSH hardening
# ---
# Adapted from the following sources:
# - https://github.com/trimstray/the-practical-linux-hardening-guide/wiki/OpenSSH
# - https://www.digitalocean.com/community/tutorials/how-to-harden-openssh-on-ubuntu-20-04#step-1-general-hardening

# Explicit disallow SSH login from accounts with empty password
PermitEmptyPasswords no

# Ensure user login is terminated as soon as ClienAliveInterval is reached
# Short idle period reduces window of opportunity for unauthorized personnel to hijack session
ClientAliveCountMax 0
ClientAliveInterval 300

# Use only FIPS-approved cryptographic hash functions
MACs hmac-sha2-512,hmac-sha2-256,hmac-sha1

# SSH environment options potentially allow users to bypass access restriction in some configurations
PermitUserEnvironment no

# Explitly set protocol version to prevent usage of insecure SSH protocol version 1
Protocol 2

# Prevent use of trust relationships which can allow attackers to move trivally from a compromised host
IgnoreRhosts yes
HostbasedAuthentication no

# Ensure login and logout activity is logged
LogLevel INFO

# Use only FIPS-approved cryptographic algorithms for authentication
Ciphers aes128-ctr,aes192-ctr,aes256-ctr,aes128-cbc,3des-cbc,aes192-cbc,aes256-cbc

# Disable unused X11 display service forwarding
X11Forwarding no

# Setting the MaxAuthTries parameter to a low number will minimize the risk of successful brute force attacks to the SSH server
MaxAuthTries 4

# Root users should never be allowed to login directly over a network
PermitRootLogin no

# Enforce public key authentication
PubkeyAuthentication yes
PasswordAuthentication no

# Disable unused auhentication methods
ChallengeResponseAuthentication no
KerberosAuthentication no
GSSAPIAuthentication no

# Disable unused tunneling and forwarding
AllowAgentForwarding no
AllowTcpForwarding no
PermitTunnel no